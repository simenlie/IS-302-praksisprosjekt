/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package nrkprosjekt;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.MouseInfo;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JTable;

/**
 *
 * @author Simen
 */
public class SearchPanel extends javax.swing.JPanel {
    
    OptionDialog dialog;
    MetaEdit metaEdit;
    JPopupMenu popupMenu;
    String selected;
    int selectedRow;
    int selectedCol;
    boolean link = false;

    /**
     * Creates new form SearchPanel
     */
    public SearchPanel() {
        
        initComponents();
        setLayout(new BorderLayout());
        jPanel1.setPreferredSize(new Dimension(100, 50));
        add(jPanel1, BorderLayout.NORTH);
        JLabel iconS = new JLabel();
        iconS.setBounds(10, 8, 34, 34);
        iconS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nrkprosjekt/graphics/search-iconP.png")));
        jPanel1.add(iconS);
        
        add(pane, BorderLayout.CENTER);

        //searchTable.setShowGrid(false);
        searchTable.setIntercellSpacing(new Dimension(0, 0));
        initPopup();
        initMetaPopup();
        searchTable.getTableHeader().setReorderingAllowed(false);
        
        
        
    }
    
    public void setShowResult(String text) {
        
        showingResult.setText(text);
    }
    
    public void initMetaPopup() {
        metaEdit = new MetaEdit(new javax.swing.JFrame(), true);
        
    }
    
    public void initPopup() {
        popupMenu = new JPopupMenu();
        JMenuItem edit = new JMenuItem("Edit");
        JMenuItem delete = new JMenuItem("Delete");
        popupMenu.add(edit);
        popupMenu.add(delete);
        
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        
    }
    
    private void editActionPerformed(java.awt.event.ActionEvent evt) {
        metaEdit.setVisible(true);
    }
    
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {
        dialog = new OptionDialog(new javax.swing.JFrame(), true, MouseInfo.getPointerInfo().getLocation());
        dialog.setVisible(true);
    }
    
    private String parse(String string) {
        selected = string;
        
        return "<html><u><font color=\"#000000\">" + string + "</font></u></html>";
    }
    
    private void backToNormal() {
        searchTable.setValueAt(selected, selectedRow, selectedCol);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pane = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        showing = new javax.swing.JLabel();
        showingResult = new javax.swing.JLabel();

        setBackground(new java.awt.Color(236, 235, 232));
        setLayout(null);

        pane.setMinimumSize(new java.awt.Dimension(1000, 500));
        pane.setPreferredSize(new java.awt.Dimension(1250, 402));

        searchTable.setAutoCreateRowSorter(true);
        searchTable.setForeground(new java.awt.Color(51, 51, 51));
        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Mabvuto", "The Borthers", null, null, null, null, null, null, null, null},
                {"La chule", "This is", null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Track", "Artist", "Album", "Duration", "Year", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        searchTable.setAlignmentX(0.6F);
        searchTable.setAlignmentY(0.6F);
        searchTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        searchTable.setIntercellSpacing(new java.awt.Dimension(5, 1));
        searchTable.setRowHeight(28);
        searchTable.setShowHorizontalLines(false);
        searchTable.setShowVerticalLines(false);
        searchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTableMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchTableMouseReleased(evt);
            }
        });
        searchTable.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                searchTableMouseMoved(evt);
            }
        });
        pane.setViewportView(searchTable);

        add(pane);
        pane.setBounds(80, 50, 1250, 220);

        jPanel1.setBackground(new java.awt.Color(251, 251, 251));
        jPanel1.setMinimumSize(new java.awt.Dimension(100, 100));
        jPanel1.setLayout(null);

        showing.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        showing.setForeground(new java.awt.Color(102, 102, 102));
        showing.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        showing.setText("Showing results for");
        jPanel1.add(showing);
        showing.setBounds(4, 4, 630, 20);

        showingResult.setFont(new java.awt.Font("Calibri Light", 1, 16)); // NOI18N
        showingResult.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        showingResult.setText("dsg");
        jPanel1.add(showingResult);
        showingResult.setBounds(4, 24, 630, 20);

        add(jPanel1);
        jPanel1.setBounds(0, 0, 620, 50);
    }// </editor-fold>//GEN-END:initComponents

    private void searchTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTableMouseReleased
        
        searchTable.setRowSelectionInterval(selectedRow, selectedRow);
        
        
        if (evt.getButton() == 3) {
            System.out.println("righ clicked");
        }
        
        if (evt.isPopupTrigger()) {
            
            popupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
            
        }
        
    }//GEN-LAST:event_searchTableMouseReleased
    
    public JTable getTable() {
        return searchTable;
    }
    
    public boolean isLink() {
        return link;
    }
    
    private void searchTableMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTableMouseMoved
        if (selected != null && searchTable.getValueAt(selectedRow, selectedCol) != null && selectedCol != 0) {
            backToNormal();
        }
        
        selectedRow = searchTable.rowAtPoint(evt.getPoint());
        selectedCol = searchTable.columnAtPoint(evt.getPoint());

        //searchTable.setRowSelectionInterval(selectedRow, selectedRow);
        //System.out.println("rad " + searchTable.getValueAt(selectedRow, selectedCol));
        if (searchTable.getValueAt(selectedRow, selectedCol) != null && selectedCol != 0) {
            String t = parse((String) searchTable.getValueAt(selectedRow, selectedCol));
            searchTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            //searchTable.getColumnModel().setColumnSelectionAllowed(false);
            link = true;
            searchTable.setValueAt(t, selectedRow, selectedCol);
            
        } else {
            searchTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            link = false;
        }


        //searchTable.getSelectedRow();

    }//GEN-LAST:event_searchTableMouseMoved
    
    private void searchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTableMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane pane;
    private javax.swing.JTable searchTable;
    private javax.swing.JLabel showing;
    private javax.swing.JLabel showingResult;
    // End of variables declaration//GEN-END:variables
}
